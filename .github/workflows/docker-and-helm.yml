name: Build & Release Internetaakafhandeling

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Simuleer release-tag (bijv. v0.1.0)'
        required: false

env:
  REGISTRY: ghcr.io
  WEB_IMAGE: ghcr.io/interne-taak-afhandeling/internetaakafhandeling.web
  POLLER_IMAGE: ghcr.io/interne-taak-afhandeling/internetaakafhandeling.poller
  SHOULD_PUSH: ${{ github.event_name != 'pull_request' }}
  IS_LATEST: false

permissions:
  contents: write
  packages: write
  id-token: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

    steps:
      - uses: actions/checkout@v4

      - name: Simuleer tag voor workflow_dispatch
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag != ''
        run: echo "GITHUB_REF=refs/tags/${{ github.event.inputs.release_tag }}" >> $GITHUB_ENV

      - name: Bepaal of dit de laatste release is
        id: latest
        run: |
          TAGS=$(git tag -l --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$')
          LATEST=$(echo "$TAGS" | head -n1)
          CURRENT_TAG="${GITHUB_REF#refs/tags/}"
          if [ "$CURRENT_TAG" = "$LATEST" ]; then
            echo "IS_LATEST=true" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_SECRET }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=${{ env.IS_LATEST }}
          images: |
            ${{ env.WEB_IMAGE }}
            ${{ env.POLLER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build & push Web image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: InterneTaakAfhandeling.Web.Server/Dockerfile
          push: ${{ fromJSON(env.SHOULD_PUSH) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push Poller image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: InterneTaakAfhandeling.Poller/Dockerfile
          push: ${{ fromJSON(env.SHOULD_PUSH) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    if: |
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.release_tag != '')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Update Helm chart version & values
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          yq eval ".appVersion = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/Chart.yaml
          yq eval ".version = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/Chart.yaml
          yq eval ".internetaakafhandeling-web.image.tag = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/values.yaml
          yq eval ".internetaakafhandeling-poller.image.tag = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/values.yaml

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Update chart dependencies
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          cd charts/internetaakafhandeling-umbrella-chart
          helm dependency update
          cd ../../

      - name: Get GitHub Pages URL
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          URL=$(gh api "repos/${GITHUB_REPOSITORY}/pages" --jq '.html_url')
          echo "PAGES_URL=$URL" >> $GITHUB_ENV

      - name: Package chart & update index
        working-directory: charts
        run: |
          helm package ./internetaakafhandeling-umbrella-chart
          curl --output _index.yaml ${{ env.PAGES_URL }}/index.yaml || echo "No existing index"
          helm repo index . --url ${{ env.PAGES_URL }} --merge ./_index.yaml
          mkdir -p ../pages
          mv *.tgz ../pages/
          mv index.yaml ../pages/

      - name: Upload Helm chart artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
