name: Build & Release Internetaakafhandeling

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  WEB_IMAGE: ghcr.io/interne-taak-afhandeling/internetaakafhandeling.web
  POLLER_IMAGE: ghcr.io/interne-taak-afhandeling/internetaakafhandeling.poller
  SHOULD_PUSH: ${{ github.event_name != 'pull_request' }}
  IS_LATEST: false

permissions:
  contents: write
  packages: write
  id-token: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}

    steps:
      - uses: actions/checkout@v4

      - name: Check if this is the latest release tag
        id: latest
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          LATEST=$(git tag -l --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)
          if [ "${GITHUB_REF#refs/tags/}" = "$LATEST" ]; then
            echo "IS_LATEST=true" >> $GITHUB_ENV
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_SECRET }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=${{ env.IS_LATEST }}
          images: |
            ${{ env.WEB_IMAGE }}
            ${{ env.POLLER_IMAGE }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build & push internetaakafhandeling.web
        uses: docker/build-push-action@v6
        with:
          context: .
          file: InterneTaakAfhandeling.Web.Server/Dockerfile
          push: ${{ fromJSON(env.SHOULD_PUSH) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & push internetaakafhandeling.poller
        uses: docker/build-push-action@v6
        with:
          context: .
          file: InterneTaakAfhandeling.Poller/Dockerfile
          push: ${{ fromJSON(env.SHOULD_PUSH) }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.34.1/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: Set version in Chart.yaml & values.yaml
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          yq eval ".appVersion = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/Chart.yaml
          yq eval ".version = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/Chart.yaml
          yq eval ".internetaakafhandeling-web.image.tag = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/values.yaml
          yq eval ".internetaakafhandeling-poller.image.tag = \"$VERSION\"" -i charts/internetaakafhandeling-umbrella-chart/values.yaml

      - name: Set up Git user
        run: |
          git config --global user.email "pascal@icatt.nl"
          git config --global user.name "PascalIcatt"

      # Install Helm to prepare dependencies
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      # Update chart dependencies before packaging
      - name: Update Helm chart dependencies
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          cd charts/internetaakafhandeling-umbrella-chart
          helm dependency update
          cd ../../

      - name: Release Helm Charts to GitHub Pages
        uses: helm/chart-releaser-action@v1.7.0
        with:
          skip_existing: false
          charts_dir: charts
        env:
          CR_TOKEN: ${{ secrets.PACKAGE_SECRET }}
          CR_OWNER: ${{ github.repository_owner }}
          CR_REPO: ${{ github.event.repository.name }}
          CR_FORCE: "true"
